<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="osobaBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>178, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>